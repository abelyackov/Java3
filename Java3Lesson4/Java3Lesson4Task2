package ru.geekbrains.chat.server;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class ClientHandler {
    private Server server;
    private Socket socket;
    private DataOutputStream out;
    private DataInputStream in;
    private String nick;
    private String login;
    private String loginUser;
    ExecutorService executorService = Executors.newSingleThreadExecutor();

    List<String> blackList;

    public String getNick() {
        return nick;
    }

    public String getLogin() {
        return login;
    }

    public ClientHandler(Server server, Socket socket) {
        try {
            this.socket = socket;
            this.server = server;
            try {
                this.in = new DataInputStream(socket.getInputStream());
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                this.out = new DataOutputStream(socket.getOutputStream());
            } catch (IOException e) {
                e.printStackTrace();
            }
            this.blackList = new ArrayList<>();
            executorService.execute(new Runnable() {
                @Override
                public void run() {
                    try {
                        while (true) {
                            String str = in.readUTF();
                            if (str.startsWith("/reg")) {
                                String[] text = str.split(" ");
                                AuthService.addUser(text[1], text[2], text[3]);
                            }
                            if (str.startsWith("/auth")) {
                                String[] tokens = str.split(" ");
                                String newNick = AuthService.getNickByLoginAndPass(tokens[1], tokens[2]);
                                login = tokens[1];
                                loginUser = login;
                                if (newNick != null) {
                                    if (!server.isNickBusy(newNick)) {
                                        sendMsg("/authok");
                                        nick = newNick;
                                        server.subscribe(ClientHandler.this);
                                        break;
                                    } else {
                                        sendMsg("Учетная запись уже используется");
                                    }
                                } else {
                                    sendMsg("Неверный логин/пароль");
                                }
                            }
                        }
                        while (true) {
                            String str = in.readUTF();
                            if (str.startsWith("/")) {
                                if (str.equals("/end")) {
                                    out.writeUTF("/serverclosed");
                                    break;
                                }
                                if (str.startsWith("/w ")) {
                                    String[] tokens = str.split(" ", 3);
                                    String m = str.substring(tokens[1].length() + 4);
                                    server.sendPersonalMsg(ClientHandler.this, tokens[1], tokens[2]);
                                }
                                if (str.startsWith("/blacklistadd ")) { // добавление пользователя в блэк-лист
                                    String[] nickToBl = str.split(" ");
                                    AuthService.addNickBl(login, nickToBl[1]);
                                    sendMsg("Вы добавили пользователя " + nickToBl[1] + " в черный список");
                                }
                                if (str.startsWith("/blacklistremove ")) { // удаление пользователя из блэк-листа
                                    String[] nickToBl = str.split(" ");
                                    AuthService.removeNickBl(login, nickToBl[1]);
                                    sendMsg("Вы удалили пользователя " + nickToBl[1] + " из черного списка");
                                }
                            } else {
                                server.broadcastMsg(ClientHandler.this, nick + ": " + str);
                            }
                            System.out.println("Client: " + str);
                        }
                        stopThread();
                    } catch (IOException e) {
                        e.printStackTrace();
                    } finally {
                        try {
                            in.close();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                        try {
                            out.close();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                        try {
                            socket.close();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                        server.unsubscribe(ClientHandler.this);
                    }
                }
            });

        } catch (Exception e) {
            e.printStackTrace();
            stopThread();
        }
    }
//            new Thread(() -> {
//                try {
//                    while (true) {
//                        String str = in.readUTF();
//                        if (str.startsWith("/reg")) {
//                            String[] text = str.split(" ");
//                            AuthService.addUser(text[1], text[2], text[3]);
//                        }
//                        if (str.startsWith("/auth")) { // /auth login72 pass72
//                            String[] tokens = str.split(" ");
//                            String newNick = AuthService.getNickByLoginAndPass(tokens[1], tokens[2]);
//                            login = tokens[1];
//                            loginUser = login;
//                            if (newNick != null) {
//                                if (!server.isNickBusy(newNick)) {
//                                    sendMsg("/authok");
//                                    nick = newNick;
//                                    server.subscribe(this);
//                                    break;
//                                } else {
//                                    sendMsg("Учетная запись уже используется");
//                                }
//                            } else {
//                                sendMsg("Неверный логин/пароль");
//                            }
//                        }
//                    }
//                    while (true) {
//                        String str = in.readUTF();
//                        if (str.startsWith("/")) {
//                            if (str.equals("/end")) {
//                                out.writeUTF("/serverclosed");
//                                break;
//                            }
//                            if (str.startsWith("/w ")) {
//                                String[] tokens = str.split(" ", 3);
//                                String m = str.substring(tokens[1].length() + 4);
//                                server.sendPersonalMsg(this, tokens[1], tokens[2]);
//                            }
//                            if (str.startsWith("/blacklistadd ")) { // добавление пользователя в блэк-лист
//                                String[] nickToBl = str.split(" ");
//                                AuthService.addNickBl(login, nickToBl[1]);
//                                sendMsg("Вы добавили пользователя " + nickToBl[1] + " в черный список");
//                            }
//                            if (str.startsWith("/blacklistremove ")) { // удаление пользователя из блэк-листа
//                                String[] nickToBl = str.split(" ");
//                                AuthService.removeNickBl(login, nickToBl[1]);
//                                sendMsg("Вы удалили пользователя " + nickToBl[1] + " из черного списка");
//                            }
//                        } else {
//                            server.broadcastMsg(this, nick + ": " + str);
//                        }
//                        System.out.println("Client: " + str);
//                    }
//                } catch (IOException e) {
//                    e.printStackTrace();
//                } finally {
//                    try {
//                        in.close();
//                    } catch (IOException e) {
//                        e.printStackTrace();
//                    }
//                    try {
//                        out.close();
//                    } catch (IOException e) {
//                        e.printStackTrace();
//                    }
//                    try {
//                        socket.close();
//                    } catch (IOException e) {
//                        e.printStackTrace();
//                    }
//                    server.unsubscribe(this);
//                }
//            }).start();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }

    public void stopThread(){
        executorService.shutdown();
        System.out.println("Поток завершен");
    }

    public boolean checkBlackList(String nick) {
        String login = loginUser;
        return AuthService.getNickBl(login, nick);
    }

    public void sendMsg(String msg) {
        try {
            out.writeUTF(msg);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}